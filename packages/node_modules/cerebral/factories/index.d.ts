export { debounce } from 'function-tree/factories'
export { sequence, parallel } from 'function-tree'

export function concat<T>(target: T, value: T): Function
export function increment(target: number, amount?: number): Function
export function merge<T>(target: T, value: Partial<T>): Function
export function pop(target: any[]): Function
export function push<T>(target: Array<T>, value: T): Function
export function set<T>(target: T, value: T): Function
export function shift(target: any[]): Function
export function splice(
  target: any[],
  start: number,
  deleteCount?: number
): Function
export function toggle(target: boolean): Function
export function unset(target: any): Function
export function unshift<T>(target: Array<T>, value: T): Function

export function equals(value: string | number): Function
export function wait(time: number): Function
export function when(value: any): Function
export function when<T>(
  value: T,
  check: (value: T) => boolean
): Function
export function when<A, B>(
  value1: A,
  value2: B,
  check: (value1: A, value2: B) => boolean
): Function
export function when<A, B, C>(
  value1: A,
  value2: B,
  value3: C,
  check: (value1: A, value2: B, value3: C) => boolean
): Function
export function when<A, B, C, D>(
  value1: A,
  value2: B,
  value3: C,
  value4: D,
  check: (value1: A, value2: B, value3: C, value4: D) => boolean
): Function
