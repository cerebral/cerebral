interface TagOptions {
  hasValue?: boolean
  isStateDependency?: boolean
}

export class Tag<T=any> {
  constructor(
    tag: string,
    options: TagOptions,
    strings: string[],
    values: any[]
  )
  options: TagOptions
  strings: string[]
  type: string
  values: any[]
  getPath(getters: any): string
  getValue(getters: any): T
}

export function props<T=any>(path: TemplateStringsArray | string[], ...values: any[]): Tag<T>
export function signal<T=any>(path: TemplateStringsArray | string[], ...values: any[]): Tag<T>
export function state<T=any>(path: TemplateStringsArray | string[], ...values: any[]): Tag<T>
export function string(path: TemplateStringsArray | string[], ...values: any[]): Tag<string>
