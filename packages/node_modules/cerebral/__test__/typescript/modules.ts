import { Module, sequence } from '../..'
import { set } from '../../operators'
import { props, state } from '../../tags'
import * as signals from './signals'
import HttpProvider, {HttpProviderError} from '@cerebral/http'

class MyError {

}

export const module1 = Module({
  state: { foo: 'bar' },
  signals: {
    foo: [set(state`bar`, props`foo`)]
  },
  catch: [
    [ Error, [ set(state`error`, props`error`) ]
    ], 
    [ MyError, [ set(state`error`, props`error`) ]
    ]
  ]
})
  
export const module2 = Module((module) => {
  module.name = 'module2'
  return {
    state: {
      foo: 'bar'
    }
  }
})

export const module3 = Module({
  state: { foo: 'bar' },
  signals: {
    foo: [set(state`bar`, props`foo`)],
    bar: sequence ( 'bar', [] )
  },
  modules: {
    module1,
    module2,
  }
})

export const rootModule = Module({
  state: {
    app: {
      name: 'Cerebral',
      ready: false
    }
  },
  modules: {
    module1,
    module2
  },
  catch: [
    [HttpProviderError, signals.errorCatched],
    [Error, signals.errorCatched]
  ],
  providers: {
    test: {},
    http: HttpProvider({
      baseUrl: 'https://api.github.com',
      headers: {
        'Content-Type': 'application/json; charset=UTF-8',
        'Accept': 'application/json'
      },
      withCredentials: false
    })
  },
  signals: { ...signals },
})