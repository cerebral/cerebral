import * as React from 'react'
import { render } from 'react-dom'
import { Controller, ControllerClass, Module, Signal } from '../..'
import Devtools from '../../devtools'
import { set } from '../../operators'
import { Container } from '@cerebral/react'
import Router from '@cerebral/router'
import { props, signal, state } from '../../tags'
import * as signals from './signals'
import { module1, module2 } from './modules'

declare var process: any

const router = Router({
  routes: [
    { path: '/', signal: 'foo' }
  ],
  query: true,
  onlyHash: true
})

const controller: ControllerClass = Controller({
  state: {
    app: {
      name: 'Cerebral',
      ready: false
    }
  },
  modules: {
    module1,
    module2
  },
  catch: new Map([
    [Error, []]
  ]),
  signals: { ...signals },
  devtools: process.env.NODE_ENV === 'production'
    ? undefined
    : Devtools({
      host: 'localhost:8585',
      reconnect: true
    })
})

render(
  React.createElement(
    Container,
    { controller },
    React.createElement('div', null, 'Hello Cerebral')
  ),
  document.querySelector('#app')
)

const appName = controller.getState('app.name')
const appState = controller.getState()

const appSignal: Signal = controller.getSignal('appSignal')
appSignal()
