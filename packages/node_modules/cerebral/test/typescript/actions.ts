import { Action, ActionChain, ActionFactory, Chain, sequence } from '../../index';
import { debounce, when, set } from './../../operators';
import { props, state } from './../../tags';

export const actionFactory: ActionFactory = (foo: boolean) => () => ({ foo })

export const simpleAction: Action = ({ state, props }) => {
    state.set('app.ready', props.ready)

    state.toggle('some.path')
    state.unset('some.path')
    state.merge('some.path', {
        some: 'value'
    })
    state.push('some.path', 'someValue')
    state.unshift('some.path', 'someValue')
    state.pop('some.path')
    state.shift('some.path')
    state.concat('some.path', ['someValueA', 'someValueB'])
    state.splice('some.path', 2, 1)
}

export const actionArray: ActionChain = [
    actionFactory(false),
    simpleAction,
    debounce(200), {
      continue: [simpleAction],
      discard: []
    },
    when(props`name`), {
        true: [set(state`app.name`, props`name`)],
        false: [] as ActionChain
    },
    sequence([simpleAction])
]