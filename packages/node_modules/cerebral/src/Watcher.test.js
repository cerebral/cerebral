/* eslint-env mocha */
import { Controller, Module, Watcher } from './'
import { state } from './tags'
import assert from 'assert'

describe.only('Watcher', () => {
  it('should watch state', () => {
    let watchedCount = 0
    const foo = Watcher({
      foo: state`foo`,
    })(() => watchedCount++)
    const app = Module({
      watchers: {
        foo,
      },
      state: {
        foo: 'bar',
      },
      signals: {
        changeFoo: ({ operators }) => operators.set(state`foo`, 'bar2'),
      },
    })
    const controller = Controller(app)
    controller.getSignal('changeFoo')()
    assert.equal(watchedCount, 1)
  })
  it('should watch state', () => {
    let grabbedValue = null
    const foo = Watcher({
      foo: state`foo`,
    })((get) => {
      grabbedValue = get(state`foo`)
    })
    const app = Module({
      watchers: {
        foo,
      },
      state: {
        foo: 'bar',
      },
      signals: {
        changeFoo: ({ operators }) => operators.set(state`foo`, 'bar2'),
      },
    })
    const controller = Controller(app)
    controller.getSignal('changeFoo')()
    assert.equal(grabbedValue, 'bar2')
  })
})
