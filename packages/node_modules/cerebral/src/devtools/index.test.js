/* eslint-env mocha */
'use strict'

import { WebSocket, Server } from 'mock-socket'
import { Devtools } from './'
import { Controller } from '../'

Devtools.prototype.createSocket = function() {
  this.ws = new WebSocket(`ws://${this.host}`)
}

describe('Devtools', () => {
  it('should not throw after state.get()', done => {
    const mockServer = new Server('ws://localhost:8585')

    const controller = Controller({
      devtools: new Devtools({
        host: 'localhost:8585',
      }),
      state: {},
    })

    setTimeout(() => {
      controller
        .run(
          'fooSignal',
          [
            function fooAction({ state }) {
              state.set('bar', {
                baz: false,
              })
              state.get()
              state.set('bar.baz', true)
            },
          ],
          {}
        )
        .then(() => {
          mockServer.stop(done)
        })
        .catch(error => {
          mockServer.stop(() => {
            done(error)
          })
        })
    }, 250)
  })
})
