/* eslint-env mocha */
import { props, state } from '../tags'

import App from '../'
import assert from 'assert'
import { unset } from './'

describe('factory.unset', () => {
  it('should unset value in model', () => {
    const rootModule = {
      state: {
        foo: 'bar',
        bar: 'baz',
      },
      sequences: {
        test: [unset(state`foo`)],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('test')()
    assert.deepEqual(controller.getState(), { bar: 'baz' })
  })
  it('should throw on bad argument', (done) => {
    const rootModule = {
      state: {},
      sequences: {
        test: [unset(props`foo`)],
      },
    }
    const controller = App(rootModule)

    controller.removeListener('error')
    controller.once('error', (error) => {
      assert.ok(error)
      done()
    })

    controller.getSequence('test')()
  })
})
