/* eslint-env mocha */
import { props, state } from '../tags'

import App from '../'
import assert from 'assert'
import { push } from './'

describe('factory.push', () => {
  it('should push value in model', () => {
    const rootModule = {
      state: {
        list: ['a', 'b'],
      },
      sequences: {
        test: [push(state`list`, 'c')],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('test')()
    assert.deepEqual(controller.getState(), { list: ['a', 'b', 'c'] })
  })
  it('should push value from props in model', () => {
    const rootModule = {
      state: {
        list: ['a', 'b'],
      },
      sequences: {
        test: [push(state`list`, props`value`)],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('test')({ value: 'c' })
    assert.deepEqual(controller.getState(), { list: ['a', 'b', 'c'] })
  })
  it('should throw on bad argument', (done) => {
    const rootModule = {
      state: {},
      sequences: {
        test: [push(props`list`, 'bar')],
      },
    }
    const controller = App(rootModule)

    controller.removeListener('error')
    controller.once('error', (error) => {
      assert.ok(error)
      done()
    })

    controller.getSequence('test')()
  })
})
