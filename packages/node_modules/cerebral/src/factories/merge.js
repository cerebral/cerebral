export default function(target, ...values) {
  function merge(context) {
    if (!context.resolve.isTag(target, 'state', 'moduleState')) {
      throw new Error(
        'Cerebral factory.merge: You have to use the STATE or MODULESTATE tag as first argument'
      )
    }

    context.store.merge(
      target,
      ...values.map((value) => {
        if (context.resolve.isTag(value)) {
          return context.resolve.value(value)
        }

        return Object.keys(value).reduce((currentValue, key) => {
          currentValue[key] = context.resolve.value(value[key])

          return currentValue
        }, {})
      })
    )
  }

  merge.displayName = `factory.merge(${String(target)}, ${values
    .map((value) => {
      return String(value)
    })
    .join(',')})`

  return merge
}
