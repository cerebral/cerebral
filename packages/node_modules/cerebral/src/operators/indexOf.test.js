/* eslint-env mocha */
import { Controller } from '../'
import assert from 'assert'
import { indexOf } from './'
import { props, state, string } from '../tags'

describe('operator.indexOf', () => {
  it('should set index of the value in the array to model', () => {
    const controller = Controller({
      state: {
        list: ['a', 'b', 'c'],
      },
      signals: {
        test: [indexOf(state`index`, state`list`, 'b')],
      },
    })
    controller.getSignal('test')()
    assert.deepEqual(controller.getState(), { index: 1, list: ['a', 'b', 'c'] })
  })
  it('should set index of the value in the array to props path', done => {
    const controller = Controller({
      state: {
        list: ['a', 'b', 'c'],
      },
      signals: {
        test: [
          indexOf(props`index`, state`list`, 'b'),
          ({ props }) => {
            assert.deepEqual(props, {
              index: 1,
            })
            done()
          },
        ],
      },
    })
    controller.getSignal('test')()
  })
  it('should throw on bad argument', done => {
    const controller = Controller({
      state: {},
      signals: {
        test: [indexOf(string`list`)],
      },
    })

    controller.removeListener('error')
    controller.once('error', error => {
      assert.ok(error)
      done()
    })

    controller.getSignal('test')()
  })
})
