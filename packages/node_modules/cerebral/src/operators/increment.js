export default function(target, value = 1) {
  function increment({ state, props, resolve }) {
    if (!resolve.isTag(target, 'state', 'props')) {
      throw new Error(
        'Cerebral operator.increment: You have to use the STATE or PROPS TAG as first argument'
      )
    }
    let targetValue = resolve.value(target)
    if (!Number.isInteger(targetValue)) {
      throw new Error(
        'Cerebral operator.increment: You must increment integer values'
      )
    }

    const resolvedValue = resolve.value(value)
    if (!Number.isInteger(resolvedValue)) {
      throw new Error(
        'Cerebral operator.increment: You must increment by integer values'
      )
    }

    targetValue += resolvedValue
    const targetPath = resolve.path(target)

    if (target.type === 'state') {
      state.set(targetPath, targetValue)
    } else {
      return { [targetPath]: targetValue }
    }
  }

  increment.displayName = `operator.increment(${String(target)}, ${String(
    value
  )})`

  return increment
}
