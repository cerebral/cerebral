import { moduleState, props, sequences, state } from '../tags'

/* eslint-env mocha */
import App from '../'
import assert from 'assert'

describe('GET', () => {
  it('should be able to GET state', () => {
    const rootModule = {
      state: {
        foo: 'bar',
      },
      sequences: {
        foo: [({ get }) => assert.deepEqual(get(state`foo`), 'bar')],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')()
  })
  it('should be able to GET module state', () => {
    const rootModule = {
      state: {
        foo: 'bar',
      },
      sequences: {
        foo: [({ get }) => assert.deepEqual(get(moduleState`foo`), 'bar')],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')()
  })
  it('should be able to GET props', () => {
    const rootModule = {
      sequences: {
        foo: [({ get }) => assert.deepEqual(get(props`foo`), 'bar')],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')({
      foo: 'bar',
    })
  })
  it('should be able to GET computed', () => {
    const rootModule = {
      state: {
        fooComputed: () => 'bar',
      },
      sequences: {
        foo: [({ get }) => assert.deepEqual(get(state`fooComputed`), 'bar')],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')()
  })
  it('should be able to GET sequence', () => {
    const rootModule = {
      sequences: {
        foo: [({ get }) => assert.ok(get(sequences`foo`))],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')()
  })
  it('should be able to get.path', () => {
    const rootModule = {
      sequences: {
        foo: [
          ({ get }) =>
            assert.equal(get.path(state`foo.bar.baz`), 'foo.bar.baz'),
        ],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')()
  })
  it('should be able to get.path from sequence', () => {
    const rootModule = {
      sequences: {
        foo: [
          ({ get }) =>
            assert.equal(get.path(sequences`foo.bar.baz`), 'foo.bar.baz'),
        ],
      },
    }
    const controller = App(rootModule)
    controller.getSequence('foo')()
  })
})
