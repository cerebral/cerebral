import Controller from './Controller'

class UniversalController extends Controller {
  constructor(controllerOptions) {
    super(controllerOptions)
    this.changes = []
    this.model.state = JSON.parse(JSON.stringify(this.model.state))
    this.trackChanges = this.trackChanges.bind(this)
    this.on('flush', this.trackChanges)
    this.hasRun = false
  }
  trackChanges(changes) {
    this.changes = this.changes.concat(changes)
  }
  getScript() {
    const state = JSON.stringify(
      this.changes.reduce((changes, change) => {
        changes[change.path.join('.')] = this.getState(change.path)

        return changes
      }, {})
    )

    this.hasRun = true
    return `<script>window.CEREBRAL_STATE = ${state}</script>`
  }
  runSequence(sequence, payload) {
    return this.run('UniversalController.run', sequence, payload)
  }
  setState(path, value) {
    this.model.set(this.getModelPathArray(path), value)
    this.flush(true) // Track changes.
  }
}

export default UniversalController
