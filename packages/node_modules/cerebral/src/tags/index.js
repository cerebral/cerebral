import { createTemplateTag, extractValueWithPath } from 'function-tree'
import { getRootPath } from '../utils'
export {
  createTemplateTag,
  extractValueWithPath,
  resolveObject,
  ResolveValue,
  Tag,
} from 'function-tree'

export const string = createTemplateTag('string', (path) => {
  return path
})

export const sequences = createTemplateTag('sequences', (path, context) => {
  return (
    context.controller.getSequence(path) ||
    context.controller.getSequences(path)
  )
})

export const computed = createTemplateTag('computed', (path, context) => {
  return context.controller.getComputed(path)
})

export const state = createTemplateTag('state', (path, context) => {
  return context.controller.getState(path)
})

export const moduleState = createTemplateTag('moduleState', (path, context) => {
  return context.controller.getState(getRootPath(path, context))
})

export const moduleComputed = createTemplateTag(
  'moduleComputed',
  (path, context) => {
    return context.controller.getComputed(getRootPath(path, context))
  }
)

export const moduleSequences = createTemplateTag(
  'moduleSequences',
  (path, context) => {
    return (
      context.controller.getSequence(getRootPath(path, context)) ||
      context.controller.getSequences(getRootPath(path, context))
    )
  }
)

export const props = createTemplateTag('props', (path, context) => {
  return extractValueWithPath(context.props, path)
})
