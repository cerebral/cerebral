import { createTemplateTag, extractValueWithPath } from 'function-tree/tags'

export {
  Tag,
  TagValue,
  string,
  createTemplateTag,
  convertObjectWithTemplates,
  extractValueWithPath,
} from 'function-tree/tags'

export const signal = createTemplateTag('signal', (path, context) => {
  // View
  if (typeof context.signal === 'function') {
    return context.signal(path)
  }

  return context.controller.getSignal(path)
})

export const state = createTemplateTag('state', (path, context) => {
  // Computed tracking and View
  if (typeof context.state === 'function') {
    return context.state(path)
  }

  return context.state.get(path)
})

export const props = createTemplateTag('props', (path, context) => {
  // Computed tracking and View
  if (typeof context.props === 'function') {
    return context.props(path)
  }

  return extractValueWithPath(context.props, path)
})
