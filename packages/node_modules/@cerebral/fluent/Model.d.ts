import { BaseModel } from 'cerebral/internal';
import { BaseControllerClass } from 'cerebral';
declare class Model extends BaseModel {
    static useLegacyStateApi: boolean;
    constructor(controller: BaseControllerClass);
    set(path: string[], value: any): void;
    toggle(path: string[]): void;
    push(path: string[], value: any): void;
    merge(path: string[], mergeValue: {}, ...values: {}[]): void;
    pop(path: string[]): void;
    shift(path: string[]): void;
    unshift(path: string[], value: any): void;
    splice(path: string[], ...args: any[]): void;
    unset(path: string[]): void;
    concat(path: string[], value: any[]): void;
    increment(path: string[], delta?: number): void;
    get(path: string[]): any;
    observeState(state: {}): {
        [key: string]: any;
    };
}
export default Model;
