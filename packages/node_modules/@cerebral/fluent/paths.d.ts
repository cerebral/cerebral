export declare function cerebralPathFromFunction<T, T2>(func: (model: T) => T2, args: any[]): T2;
export interface ICombinePath<T> {
    with<TProp>(func: (model: T) => TProp, ...args: any[]): TProp;
}
export declare function pathFrom<T>(): <TProp>(func: (model: T) => TProp, ...args: any[]) => TProp;
export declare function pathFor<T>(func: (model: T) => any, ...args: any[]): string;
export declare function combinePaths<T>(): <TProp>(input: TProp | ((model: T) => TProp), ...args: any[]) => ICombinePath<TProp>;
