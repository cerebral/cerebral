import { BaseController } from 'cerebral'
import Model from './Model'
import { extractModulesProp, throwError } from 'cerebral/lib/utils'

class MobxController extends BaseController {
  constructor(config) {
    super(config)
    this.provide = function() {
      return {
        store: this.model.state,
        signals: extractModulesProp(this.module.modules, 'signals', signals => {
          return Object.keys(signals).reduce((runSignals, signalKey) => {
            if (signals[signalKey].run) {
              runSignals[signalKey] = signals[signalKey].run
            } else {
              runSignals[signalKey] = signals[signalKey]
            }

            return runSignals
          }, {})
        }),
      }
    }
  }
}

export function Controller(config) {
  if (config.state || config.signals || config.model) {
    throwError(
      'The Mobx Controller does not support root state, signals or model. Create a module'
    )
  }

  config.Model = Model

  return new MobxController(config)
}
