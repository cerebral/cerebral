/* eslint-disable no-unused-vars */
import { Component, ChangeDetectionStrategy } from '@angular/core'
import { connect } from '../src/connect'
import { state, signals } from 'cerebral/tags'
import { CerebralComponent } from '../src/CerebralComponent'
/* eslint-enable no-unused-vars */

@Component({
  selector: 'test-app',
  template: `
        <input id="count" [value]="count">
        <div id="increase" (click)="increase()">Increase</div>
        <div id="decrease" (click)="decrease()">Decrease</div>
        <div id="increaseFreq" (click)="increaseFreq()">Decrease</div>
        <div id="changeSubCompName" (click)="changeSubCompName()">Decrease</div>
        <sub-component id="subComponent" [subCompObj]="subCompObj"></sub-component>
    `,
  changeDetection: ChangeDetectionStrategy.OnPush,
})
@connect({
  count: state`count`,
  subCompObj: state`subCompObj`,
  increase: signals`increase`,
  decrease: signals`decrease`,
  increaseFreq: signals`increaseFreq`,
  changeSubCompName: signals`changeSubCompName`,
})
export class TestComponent extends CerebralComponent {
  constructor() {
    super({ _view: 'view' }, { flush: () => {} }) // Test only code normally see below to setup the component
  }
}
