// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transform dot syntax from \`path\` to string should work for simple dot usage 1`] = `
"
\`hello.world\`;"
`;

exports[`Transform dot syntax from \`path\` to string should work with nested usage 1`] = `
"
\`hello.\${\`world\`}\`;"
`;

exports[`Transform dot syntax from \`path\` to string should work with other tags 1`] = `
"
import { state } from 'cerebral/tags';
\`hello.\${state\`world\`}\`;"
`;

exports[`Transform dot syntax to template tags should allow access to variables 1`] = `
"
import { state } from 'cerebral/tags';
const a = 'a';
const b = 'b';
state\`a.\${a + b}\`;"
`;

exports[`Transform dot syntax to template tags should allow for string accessors 1`] = `
"
import { state } from 'cerebral/tags';
state\`a.b\`;"
`;

exports[`Transform dot syntax to template tags should allow imported variable to be renamed 1`] = `
"
import { state as anotherName } from 'cerebral/tags';
state => anotherName\`hello.\${anotherName\`world\`}\`;"
`;

exports[`Transform dot syntax to template tags should allow nested usage 1`] = `
"
import { state } from 'cerebral/tags';
state\`hello.\${state\`world\`}\`;"
`;

exports[`Transform dot syntax to template tags should ignore unbound variable 1`] = `
"
import { state } from 'cerebral/tags';
notState.hello.world;"
`;

exports[`Transform dot syntax to template tags should ignore variable when shadowed 1`] = `
"
import { state } from 'cerebral/tags';
state => state.hello[state.world];"
`;

exports[`Transform dot syntax to template tags should not do anything when cerebral/proxy is not imported 1`] = `
"
import { state } from 'other-module';
state.hello.world;"
`;

exports[`Transform dot syntax to template tags should support expression in property accessor 1`] = `
"
import { state } from 'cerebral/tags';
state\`a.\${1 + 1}\`;"
`;

exports[`Transform dot syntax to template tags should throw on default import 1`] = `"unknown: Default import is not allowed"`;

exports[`Transform dot syntax to template tags should throw when import is not allowed 1`] = `"unknown: \\"wrongImport\\" is not a valid import"`;

exports[`Transform dot syntax to template tags should track variable assigment 1`] = `
"
import { state } from 'cerebral/tags';
const a = state;
const b = a;
state\`hello.world\`;"
`;

exports[`Transform dot syntax to template tags should transforms simple state dot syntax 1`] = `
"
import { state } from 'cerebral/tags';
state\`hello.world\`;"
`;

exports[`Transform imports containing "cerebral.proxy" should allow renaming of imports 1`] = `
"
import { path as fooBar, state } from 'app.cerebral.proxy.ts';
fooBar\`hello.\${state\`world\`}\`;"
`;

exports[`Transform imports containing "cerebral.proxy" should not complain about other imports 1`] = `
"
import { path, state, foo, bar } from 'app.cerebral.proxy.ts';"
`;

exports[`Transform imports containing "cerebral.proxy" should rewrite tags but not import 1`] = `
"
import { path, state } from 'app.cerebral.proxy.ts';
\`hello.\${state\`world\`}\`;"
`;
