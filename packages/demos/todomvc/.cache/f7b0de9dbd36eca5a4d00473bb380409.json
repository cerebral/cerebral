{
  "dependencies": [
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc/.babelrc",
      "includedInParent": true,
      "mtime": 1522949698000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc/package.json",
      "includedInParent": true,
      "mtime": 1522949595000
    },
    { "name": "cerebral", "loc": { "line": 1, "column": 24 } },
    { "name": "cerebral/tags", "loc": { "line": 2, "column": 22 } },
    { "name": "./visibleTodosUids", "loc": { "line": 3, "column": 37 } }
  ],
  "generated": {
    "js":
      "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _templateObject = _taggedTemplateLiteral(['todos'], ['todos']);\n\nvar _cerebral = require('cerebral');\n\nvar _tags = require('cerebral/tags');\n\nvar _visibleTodosUids = require('./visibleTodosUids');\n\nvar _visibleTodosUids2 = _interopRequireDefault(_visibleTodosUids);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nexports.default = (0, _cerebral.Compute)((0, _tags.state)(_templateObject), _visibleTodosUids2.default, function (todos, visibleTodosUids, get) {\n    var todosUids = Object.keys(todos);\n\n    return todosUids.reduce(function (counts, uid) {\n        if (todos[uid].completed) {\n            counts.completed++;\n        } else {\n            counts.remaining++;\n        }\n\n        counts.total++;\n\n        return counts;\n    }, {\n        completed: 0,\n        remaining: 0,\n        total: Object.keys(todos).length,\n        visible: todosUids.length\n    });\n});",
    "map": {
      "mappings": [
        {
          "generated": { "line": 9, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 1, "column": 0 }
        },
        {
          "generated": { "line": 11, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 2, "column": 0 }
        },
        {
          "generated": { "line": 13, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 3, "column": 0 }
        },
        {
          "generated": { "line": 21, "column": 18 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 15 }
        },
        {
          "generated": { "line": 21, "column": 104 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 62 }
        },
        {
          "name": "todos",
          "generated": { "line": 21, "column": 114 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 63 }
        },
        {
          "generated": { "line": 21, "column": 119 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 62 }
        },
        {
          "name": "visibleTodosUids",
          "generated": { "line": 21, "column": 121 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 70 }
        },
        {
          "generated": { "line": 21, "column": 137 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 62 }
        },
        {
          "name": "get",
          "generated": { "line": 21, "column": 139 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 88 }
        },
        {
          "generated": { "line": 21, "column": 142 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 62 }
        },
        {
          "generated": { "line": 21, "column": 144 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 96 }
        },
        {
          "generated": { "line": 22, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 4 }
        },
        {
          "name": "todosUids",
          "generated": { "line": 22, "column": 8 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 10 }
        },
        {
          "name": "Object",
          "generated": { "line": 22, "column": 20 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 22 }
        },
        {
          "name": "keys",
          "generated": { "line": 22, "column": 27 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 29 }
        },
        {
          "generated": { "line": 22, "column": 31 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 22 }
        },
        {
          "name": "todos",
          "generated": { "line": 22, "column": 32 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 34 }
        },
        {
          "generated": { "line": 22, "column": 37 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 22 }
        },
        {
          "generated": { "line": 22, "column": 38 },
          "source": "src/computed/counts.js",
          "original": { "line": 6, "column": 4 }
        },
        {
          "generated": { "line": 24, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 4 }
        },
        {
          "name": "todosUids",
          "generated": { "line": 24, "column": 11 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 11 }
        },
        {
          "name": "reduce",
          "generated": { "line": 24, "column": 21 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 21 }
        },
        {
          "generated": { "line": 24, "column": 27 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 11 }
        },
        {
          "generated": { "line": 24, "column": 28 },
          "source": "src/computed/counts.js",
          "original": { "line": 9, "column": 8 }
        },
        {
          "name": "counts",
          "generated": { "line": 24, "column": 38 },
          "source": "src/computed/counts.js",
          "original": { "line": 9, "column": 9 }
        },
        {
          "generated": { "line": 24, "column": 44 },
          "source": "src/computed/counts.js",
          "original": { "line": 9, "column": 8 }
        },
        {
          "name": "uid",
          "generated": { "line": 24, "column": 46 },
          "source": "src/computed/counts.js",
          "original": { "line": 9, "column": 17 }
        },
        {
          "generated": { "line": 24, "column": 49 },
          "source": "src/computed/counts.js",
          "original": { "line": 9, "column": 8 }
        },
        {
          "generated": { "line": 24, "column": 51 },
          "source": "src/computed/counts.js",
          "original": { "line": 9, "column": 25 }
        },
        {
          "generated": { "line": 25, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 12 }
        },
        {
          "name": "todos",
          "generated": { "line": 25, "column": 12 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 16 }
        },
        {
          "name": "uid",
          "generated": { "line": 25, "column": 18 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 22 }
        },
        {
          "generated": { "line": 25, "column": 21 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 16 }
        },
        {
          "name": "completed",
          "generated": { "line": 25, "column": 23 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 27 }
        },
        {
          "generated": { "line": 25, "column": 32 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 12 }
        },
        {
          "generated": { "line": 25, "column": 34 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 38 }
        },
        {
          "name": "counts",
          "generated": { "line": 26, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 11, "column": 16 }
        },
        {
          "name": "completed",
          "generated": { "line": 26, "column": 19 },
          "source": "src/computed/counts.js",
          "original": { "line": 11, "column": 23 }
        },
        {
          "generated": { "line": 26, "column": 28 },
          "source": "src/computed/counts.js",
          "original": { "line": 11, "column": 16 }
        },
        {
          "generated": { "line": 27, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 12, "column": 13 }
        },
        {
          "generated": { "line": 27, "column": 9 },
          "source": "src/computed/counts.js",
          "original": { "line": 10, "column": 12 }
        },
        {
          "generated": { "line": 27, "column": 15 },
          "source": "src/computed/counts.js",
          "original": { "line": 12, "column": 19 }
        },
        {
          "name": "counts",
          "generated": { "line": 28, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 13, "column": 16 }
        },
        {
          "name": "remaining",
          "generated": { "line": 28, "column": 19 },
          "source": "src/computed/counts.js",
          "original": { "line": 13, "column": 23 }
        },
        {
          "generated": { "line": 28, "column": 28 },
          "source": "src/computed/counts.js",
          "original": { "line": 13, "column": 16 }
        },
        {
          "generated": { "line": 29, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 14, "column": 13 }
        },
        {
          "name": "counts",
          "generated": { "line": 31, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 16, "column": 12 }
        },
        {
          "name": "total",
          "generated": { "line": 31, "column": 15 },
          "source": "src/computed/counts.js",
          "original": { "line": 16, "column": 19 }
        },
        {
          "generated": { "line": 31, "column": 20 },
          "source": "src/computed/counts.js",
          "original": { "line": 16, "column": 12 }
        },
        {
          "generated": { "line": 33, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 18, "column": 12 }
        },
        {
          "name": "counts",
          "generated": { "line": 33, "column": 15 },
          "source": "src/computed/counts.js",
          "original": { "line": 18, "column": 19 }
        },
        {
          "generated": { "line": 33, "column": 21 },
          "source": "src/computed/counts.js",
          "original": { "line": 18, "column": 12 }
        },
        {
          "generated": { "line": 34, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 19, "column": 9 }
        },
        {
          "generated": { "line": 34, "column": 5 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 11 }
        },
        {
          "generated": { "line": 34, "column": 7 },
          "source": "src/computed/counts.js",
          "original": { "line": 20, "column": 8 }
        },
        {
          "name": "completed",
          "generated": { "line": 35, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 21, "column": 12 }
        },
        {
          "generated": { "line": 35, "column": 19 },
          "source": "src/computed/counts.js",
          "original": { "line": 21, "column": 23 }
        },
        {
          "generated": { "line": 35, "column": 20 },
          "source": "src/computed/counts.js",
          "original": { "line": 20, "column": 8 }
        },
        {
          "name": "remaining",
          "generated": { "line": 36, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 22, "column": 12 }
        },
        {
          "generated": { "line": 36, "column": 19 },
          "source": "src/computed/counts.js",
          "original": { "line": 22, "column": 23 }
        },
        {
          "generated": { "line": 36, "column": 20 },
          "source": "src/computed/counts.js",
          "original": { "line": 20, "column": 8 }
        },
        {
          "name": "total",
          "generated": { "line": 37, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 12 }
        },
        {
          "name": "Object",
          "generated": { "line": 37, "column": 15 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 19 }
        },
        {
          "name": "keys",
          "generated": { "line": 37, "column": 22 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 26 }
        },
        {
          "generated": { "line": 37, "column": 26 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 19 }
        },
        {
          "name": "todos",
          "generated": { "line": 37, "column": 27 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 31 }
        },
        {
          "generated": { "line": 37, "column": 32 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 19 }
        },
        {
          "name": "length",
          "generated": { "line": 37, "column": 34 },
          "source": "src/computed/counts.js",
          "original": { "line": 23, "column": 38 }
        },
        {
          "generated": { "line": 37, "column": 40 },
          "source": "src/computed/counts.js",
          "original": { "line": 20, "column": 8 }
        },
        {
          "name": "visible",
          "generated": { "line": 38, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 24, "column": 12 }
        },
        {
          "name": "todosUids",
          "generated": { "line": 38, "column": 17 },
          "source": "src/computed/counts.js",
          "original": { "line": 24, "column": 21 }
        },
        {
          "name": "length",
          "generated": { "line": 38, "column": 27 },
          "source": "src/computed/counts.js",
          "original": { "line": 24, "column": 31 }
        },
        {
          "generated": { "line": 39, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 20, "column": 8 }
        },
        {
          "generated": { "line": 39, "column": 5 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 11 }
        },
        {
          "generated": { "line": 39, "column": 6 },
          "source": "src/computed/counts.js",
          "original": { "line": 8, "column": 4 }
        },
        {
          "generated": { "line": 40, "column": 0 },
          "source": "src/computed/counts.js",
          "original": { "line": 27, "column": 1 }
        },
        {
          "generated": { "line": 40, "column": 1 },
          "source": "src/computed/counts.js",
          "original": { "line": 5, "column": 15 }
        }
      ],
      "sources": {
        "src/computed/counts.js":
          "import { Compute } from 'cerebral';\nimport { state } from 'cerebral/proxy';\nimport computedVisibleTodosUids from './visibleTodosUids';\n\nexport default Compute(state.todos, computedVisibleTodosUids, (todos, visibleTodosUids, get) => {\n    const todosUids = Object.keys(todos);\n\n    return todosUids.reduce(\n        (counts, uid) => {\n            if (todos[uid].completed) {\n                counts.completed++;\n            } else {\n                counts.remaining++;\n            }\n\n            counts.total++;\n\n            return counts;\n        },\n        {\n            completed: 0,\n            remaining: 0,\n            total: Object.keys(todos).length,\n            visible: todosUids.length\n        }\n    );\n});\n"
      },
      "lineCount": null
    }
  },
  "hash": "6582c287c9ed0aea20246e1222c530bf",
  "cacheData": { "env": {} }
}
