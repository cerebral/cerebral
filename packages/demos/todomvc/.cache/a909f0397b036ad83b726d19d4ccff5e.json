{
  "dependencies": [
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc/package.json",
      "includedInParent": true,
      "mtime": 1522949595000
    },
    {
      "name": "/Users/christianalfoni/Development/cerebral/.babelrc",
      "includedInParent": true,
      "mtime": 1519154111000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/node_modules/@cerebral/router/package.json",
      "includedInParent": true,
      "mtime": 1522871063000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/node_modules/@cerebral/router/.babelrc",
      "includedInParent": true,
      "mtime": 1510689741000
    },
    { "name": "cerebral/internal", "loc": { "line": 12, "column": 24 } }
  ],
  "generated": {
    "js":
      "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flattenConfig = flattenConfig;\nexports.getRoutesBySignal = getRoutesBySignal;\nexports.hasChangedPath = hasChangedPath;\nexports.computeShouldChange = computeShouldChange;\nexports.verifyOptions = verifyOptions;\n\nvar _internal = require('cerebral/internal');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction compatConfig(config) {\n  var _ref;\n\n  var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return (_ref = []).concat.apply(_ref, _toConsumableArray(Object.keys(config).map(function (key) {\n    var conf = config[key];\n    if (typeof conf === 'string') {\n      return [{ path: prev + key, signal: conf }];\n    }\n    return compatConfig(conf, prev + key);\n  })));\n}\n\nfunction flattenConfig(config) {\n  var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!Array.isArray(config)) {\n    config = compatConfig(config);\n  }\n  return config.reduce(function (flattened, _ref2) {\n    var map = _ref2.map,\n        path = _ref2.path,\n        routes = _ref2.routes,\n        rmap = _ref2.rmap,\n        signal = _ref2.signal;\n\n    if (routes) {\n      Object.assign(flattened, flattenConfig(routes, prev + path));\n    }\n\n    var currentPath = prev + path;\n    var conf = { signal: signal };\n    if (map) {\n      conf.map = map;\n      var stateMapping = Object.keys(map).filter(function (key) {\n        return map[key].type === 'state';\n      });\n      if (stateMapping.length) {\n        conf.stateMapping = stateMapping;\n      }\n\n      var computedKeys = Object.keys(map).filter(function (key) {\n        return map[key] instanceof _internal.ComputeClass;\n      });\n      if (computedKeys.length) {\n        conf.computedMapping = computedKeys.reduce(function (mapping, key) {\n          var tracker = new _internal.DependencyTracker(map[key]);\n          // We have to wait until we have access to controller before\n          // doing the first run.\n          mapping[key] = { tracker: tracker, needsInit: true };\n          return mapping;\n        }, {});\n      }\n\n      var propsMapping = Object.keys(map).filter(function (key) {\n        return map[key].type === 'props';\n      });\n      if (propsMapping.length) {\n        conf.propsMapping = propsMapping;\n        if (!signal) {\n          throw new Error('Cerebral router - route ' + currentPath + ' has props mappings but no signal was defined.');\n        }\n      }\n    }\n\n    var computedRmapKeys = Object.keys(rmap || {}).filter(function (key) {\n      return rmap[key] instanceof _internal.ComputeClass;\n    });\n\n    if (computedRmapKeys.length) {\n      conf.rmap = rmap;\n      conf.computedRMapping = computedRmapKeys.reduce(function (mapping, key) {\n        var tracker = new _internal.DependencyTracker(rmap[key]);\n        // We have to wait until we have access to controller before\n        // doing the first run.\n        mapping[key] = { tracker: tracker, needsInit: true };\n        return mapping;\n      }, {});\n    }\n\n    flattened[currentPath] = conf;\n\n    return flattened;\n  }, {});\n}\n\nfunction getRoutesBySignal(config) {\n  return Object.keys(config).reduce(function (routableSignals, route) {\n    var signalName = config[route].signal;\n\n\n    if (!signalName) {\n      return routableSignals;\n    }\n\n    if (routableSignals[signalName]) {\n      throw new Error('Cerebral router - The signal ' + signalName + ' has already been bound to route ' + route + '. Create a new signal and reuse actions instead if needed.');\n    }\n\n    routableSignals[signalName] = route;\n\n    return routableSignals;\n  }, {});\n}\n\nfunction hasChangedPath(changes, path) {\n  for (var change in changes) {\n    if (changes[change].path.join('.') === path) {\n      return true;\n    }\n  }\n}\n\nfunction computeShouldChange(tracker, changed) {\n  return (0, _internal.dependencyMatch)(changed, tracker.stateTrackMap).length > 0;\n}\n\nfunction ensureBaseUrl(url) {\n  if (!url) {\n    return '';\n  }\n\n  return url[0] === '/' ? url : '/' + url;\n}\n\nfunction verifyOptions(options) {\n  return Object.assign(options, {\n    baseUrl: ensureBaseUrl(options.baseUrl)\n  });\n}\n//# sourceMappingURL=utils.js.map",
    "map": {
      "mappings": [
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 1, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 2, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 3, "column": 0 },
          "generated": { "line": 3, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 4, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 5, "column": 0 },
          "generated": { "line": 5, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 6, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 7, "column": 0 },
          "generated": { "line": 7, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 8, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 9, "column": 0 },
          "generated": { "line": 9, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 10, "column": 0 },
          "generated": { "line": 10, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 11, "column": 0 },
          "generated": { "line": 11, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 12, "column": 0 },
          "generated": { "line": 12, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 13, "column": 0 },
          "generated": { "line": 13, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 14, "column": 0 },
          "generated": { "line": 14, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 15, "column": 0 },
          "generated": { "line": 15, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 16, "column": 0 },
          "generated": { "line": 16, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 17, "column": 0 },
          "generated": { "line": 17, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 18, "column": 0 },
          "generated": { "line": 18, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 19, "column": 0 },
          "generated": { "line": 19, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 20, "column": 0 },
          "generated": { "line": 20, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 21, "column": 0 },
          "generated": { "line": 21, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 22, "column": 0 },
          "generated": { "line": 22, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 23, "column": 0 },
          "generated": { "line": 23, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 24, "column": 0 },
          "generated": { "line": 24, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 25, "column": 0 },
          "generated": { "line": 25, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 26, "column": 0 },
          "generated": { "line": 26, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 27, "column": 0 },
          "generated": { "line": 27, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 28, "column": 0 },
          "generated": { "line": 28, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 29, "column": 0 },
          "generated": { "line": 29, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 30, "column": 0 },
          "generated": { "line": 30, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 31, "column": 0 },
          "generated": { "line": 31, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 32, "column": 0 },
          "generated": { "line": 32, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 33, "column": 0 },
          "generated": { "line": 33, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 34, "column": 0 },
          "generated": { "line": 34, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 35, "column": 0 },
          "generated": { "line": 35, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 36, "column": 0 },
          "generated": { "line": 36, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 37, "column": 0 },
          "generated": { "line": 37, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 38, "column": 0 },
          "generated": { "line": 38, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 39, "column": 0 },
          "generated": { "line": 39, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 40, "column": 0 },
          "generated": { "line": 40, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 41, "column": 0 },
          "generated": { "line": 41, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 42, "column": 0 },
          "generated": { "line": 42, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 43, "column": 0 },
          "generated": { "line": 43, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 44, "column": 0 },
          "generated": { "line": 44, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 45, "column": 0 },
          "generated": { "line": 45, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 46, "column": 0 },
          "generated": { "line": 46, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 47, "column": 0 },
          "generated": { "line": 47, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 48, "column": 0 },
          "generated": { "line": 48, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 49, "column": 0 },
          "generated": { "line": 49, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 50, "column": 0 },
          "generated": { "line": 50, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 51, "column": 0 },
          "generated": { "line": 51, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 52, "column": 0 },
          "generated": { "line": 52, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 53, "column": 0 },
          "generated": { "line": 53, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 54, "column": 0 },
          "generated": { "line": 54, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 55, "column": 0 },
          "generated": { "line": 55, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 56, "column": 0 },
          "generated": { "line": 56, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 57, "column": 0 },
          "generated": { "line": 57, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 58, "column": 0 },
          "generated": { "line": 58, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 59, "column": 0 },
          "generated": { "line": 59, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 60, "column": 0 },
          "generated": { "line": 60, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 61, "column": 0 },
          "generated": { "line": 61, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 62, "column": 0 },
          "generated": { "line": 62, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 63, "column": 0 },
          "generated": { "line": 63, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 64, "column": 0 },
          "generated": { "line": 64, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 65, "column": 0 },
          "generated": { "line": 65, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 66, "column": 0 },
          "generated": { "line": 66, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 67, "column": 0 },
          "generated": { "line": 67, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 68, "column": 0 },
          "generated": { "line": 68, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 69, "column": 0 },
          "generated": { "line": 69, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 70, "column": 0 },
          "generated": { "line": 70, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 71, "column": 0 },
          "generated": { "line": 71, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 72, "column": 0 },
          "generated": { "line": 72, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 73, "column": 0 },
          "generated": { "line": 73, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 74, "column": 0 },
          "generated": { "line": 74, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 75, "column": 0 },
          "generated": { "line": 75, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 76, "column": 0 },
          "generated": { "line": 76, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 77, "column": 0 },
          "generated": { "line": 77, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 78, "column": 0 },
          "generated": { "line": 78, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 79, "column": 0 },
          "generated": { "line": 79, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 80, "column": 0 },
          "generated": { "line": 80, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 81, "column": 0 },
          "generated": { "line": 81, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 82, "column": 0 },
          "generated": { "line": 82, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 83, "column": 0 },
          "generated": { "line": 83, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 84, "column": 0 },
          "generated": { "line": 84, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 85, "column": 0 },
          "generated": { "line": 85, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 86, "column": 0 },
          "generated": { "line": 86, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 87, "column": 0 },
          "generated": { "line": 87, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 88, "column": 0 },
          "generated": { "line": 88, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 89, "column": 0 },
          "generated": { "line": 89, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 90, "column": 0 },
          "generated": { "line": 90, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 91, "column": 0 },
          "generated": { "line": 91, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 92, "column": 0 },
          "generated": { "line": 92, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 93, "column": 0 },
          "generated": { "line": 93, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 94, "column": 0 },
          "generated": { "line": 94, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 95, "column": 0 },
          "generated": { "line": 95, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 96, "column": 0 },
          "generated": { "line": 96, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 97, "column": 0 },
          "generated": { "line": 97, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 98, "column": 0 },
          "generated": { "line": 98, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 99, "column": 0 },
          "generated": { "line": 99, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 100, "column": 0 },
          "generated": { "line": 100, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 101, "column": 0 },
          "generated": { "line": 101, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 102, "column": 0 },
          "generated": { "line": 102, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 103, "column": 0 },
          "generated": { "line": 103, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 104, "column": 0 },
          "generated": { "line": 104, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 105, "column": 0 },
          "generated": { "line": 105, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 106, "column": 0 },
          "generated": { "line": 106, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 107, "column": 0 },
          "generated": { "line": 107, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 108, "column": 0 },
          "generated": { "line": 108, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 109, "column": 0 },
          "generated": { "line": 109, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 110, "column": 0 },
          "generated": { "line": 110, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 111, "column": 0 },
          "generated": { "line": 111, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 112, "column": 0 },
          "generated": { "line": 112, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 113, "column": 0 },
          "generated": { "line": 113, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 114, "column": 0 },
          "generated": { "line": 114, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 115, "column": 0 },
          "generated": { "line": 115, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 116, "column": 0 },
          "generated": { "line": 116, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 117, "column": 0 },
          "generated": { "line": 117, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 118, "column": 0 },
          "generated": { "line": 118, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 119, "column": 0 },
          "generated": { "line": 119, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 120, "column": 0 },
          "generated": { "line": 120, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 121, "column": 0 },
          "generated": { "line": 121, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 122, "column": 0 },
          "generated": { "line": 122, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 123, "column": 0 },
          "generated": { "line": 123, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 124, "column": 0 },
          "generated": { "line": 124, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 125, "column": 0 },
          "generated": { "line": 125, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 126, "column": 0 },
          "generated": { "line": 126, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 127, "column": 0 },
          "generated": { "line": 127, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 128, "column": 0 },
          "generated": { "line": 128, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 129, "column": 0 },
          "generated": { "line": 129, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 130, "column": 0 },
          "generated": { "line": 130, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 131, "column": 0 },
          "generated": { "line": 131, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 132, "column": 0 },
          "generated": { "line": 132, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 133, "column": 0 },
          "generated": { "line": 133, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 134, "column": 0 },
          "generated": { "line": 134, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 135, "column": 0 },
          "generated": { "line": 135, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 136, "column": 0 },
          "generated": { "line": 136, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 137, "column": 0 },
          "generated": { "line": 137, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 138, "column": 0 },
          "generated": { "line": 138, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 139, "column": 0 },
          "generated": { "line": 139, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 140, "column": 0 },
          "generated": { "line": 140, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 141, "column": 0 },
          "generated": { "line": 141, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 142, "column": 0 },
          "generated": { "line": 142, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 143, "column": 0 },
          "generated": { "line": 143, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 144, "column": 0 },
          "generated": { "line": 144, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 145, "column": 0 },
          "generated": { "line": 145, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 146, "column": 0 },
          "generated": { "line": 146, "column": 0 }
        },
        {
          "source": "../../node_modules/@cerebral/router/lib/utils.js",
          "original": { "line": 147, "column": 0 },
          "generated": { "line": 147, "column": 0 }
        }
      ],
      "sources": {
        "../../node_modules/@cerebral/router/lib/utils.js":
          "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flattenConfig = flattenConfig;\nexports.getRoutesBySignal = getRoutesBySignal;\nexports.hasChangedPath = hasChangedPath;\nexports.computeShouldChange = computeShouldChange;\nexports.verifyOptions = verifyOptions;\n\nvar _internal = require('cerebral/internal');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction compatConfig(config) {\n  var _ref;\n\n  var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return (_ref = []).concat.apply(_ref, _toConsumableArray(Object.keys(config).map(function (key) {\n    var conf = config[key];\n    if (typeof conf === 'string') {\n      return [{ path: prev + key, signal: conf }];\n    }\n    return compatConfig(conf, prev + key);\n  })));\n}\n\nfunction flattenConfig(config) {\n  var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!Array.isArray(config)) {\n    config = compatConfig(config);\n  }\n  return config.reduce(function (flattened, _ref2) {\n    var map = _ref2.map,\n        path = _ref2.path,\n        routes = _ref2.routes,\n        rmap = _ref2.rmap,\n        signal = _ref2.signal;\n\n    if (routes) {\n      Object.assign(flattened, flattenConfig(routes, prev + path));\n    }\n\n    var currentPath = prev + path;\n    var conf = { signal: signal };\n    if (map) {\n      conf.map = map;\n      var stateMapping = Object.keys(map).filter(function (key) {\n        return map[key].type === 'state';\n      });\n      if (stateMapping.length) {\n        conf.stateMapping = stateMapping;\n      }\n\n      var computedKeys = Object.keys(map).filter(function (key) {\n        return map[key] instanceof _internal.ComputeClass;\n      });\n      if (computedKeys.length) {\n        conf.computedMapping = computedKeys.reduce(function (mapping, key) {\n          var tracker = new _internal.DependencyTracker(map[key]);\n          // We have to wait until we have access to controller before\n          // doing the first run.\n          mapping[key] = { tracker: tracker, needsInit: true };\n          return mapping;\n        }, {});\n      }\n\n      var propsMapping = Object.keys(map).filter(function (key) {\n        return map[key].type === 'props';\n      });\n      if (propsMapping.length) {\n        conf.propsMapping = propsMapping;\n        if (!signal) {\n          throw new Error('Cerebral router - route ' + currentPath + ' has props mappings but no signal was defined.');\n        }\n      }\n    }\n\n    var computedRmapKeys = Object.keys(rmap || {}).filter(function (key) {\n      return rmap[key] instanceof _internal.ComputeClass;\n    });\n\n    if (computedRmapKeys.length) {\n      conf.rmap = rmap;\n      conf.computedRMapping = computedRmapKeys.reduce(function (mapping, key) {\n        var tracker = new _internal.DependencyTracker(rmap[key]);\n        // We have to wait until we have access to controller before\n        // doing the first run.\n        mapping[key] = { tracker: tracker, needsInit: true };\n        return mapping;\n      }, {});\n    }\n\n    flattened[currentPath] = conf;\n\n    return flattened;\n  }, {});\n}\n\nfunction getRoutesBySignal(config) {\n  return Object.keys(config).reduce(function (routableSignals, route) {\n    var signalName = config[route].signal;\n\n\n    if (!signalName) {\n      return routableSignals;\n    }\n\n    if (routableSignals[signalName]) {\n      throw new Error('Cerebral router - The signal ' + signalName + ' has already been bound to route ' + route + '. Create a new signal and reuse actions instead if needed.');\n    }\n\n    routableSignals[signalName] = route;\n\n    return routableSignals;\n  }, {});\n}\n\nfunction hasChangedPath(changes, path) {\n  for (var change in changes) {\n    if (changes[change].path.join('.') === path) {\n      return true;\n    }\n  }\n}\n\nfunction computeShouldChange(tracker, changed) {\n  return (0, _internal.dependencyMatch)(changed, tracker.stateTrackMap).length > 0;\n}\n\nfunction ensureBaseUrl(url) {\n  if (!url) {\n    return '';\n  }\n\n  return url[0] === '/' ? url : '/' + url;\n}\n\nfunction verifyOptions(options) {\n  return Object.assign(options, {\n    baseUrl: ensureBaseUrl(options.baseUrl)\n  });\n}\n//# sourceMappingURL=utils.js.map"
      },
      "lineCount": 147
    }
  },
  "hash": "e2d0fdda263d8cc073d8068aa7cd26df",
  "cacheData": { "env": {} }
}
