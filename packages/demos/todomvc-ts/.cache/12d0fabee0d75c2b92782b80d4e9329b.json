{
  "dependencies": [
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc-ts/package.json",
      "includedInParent": true,
      "mtime": 1523112004000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc-ts/.babelrc",
      "includedInParent": true,
      "mtime": 1522993159000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/node_modules/@cerebral/router/node_modules/querystringify/package.json",
      "includedInParent": true,
      "mtime": 1510917226000
    }
  ],
  "generated": {
    "js":
      "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decode(part[1])] = decode(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n",
    "map": {
      "mappings": [
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 1, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 2, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 3, "column": 0 },
          "generated": { "line": 3, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 4, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 5, "column": 0 },
          "generated": { "line": 5, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 6, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 7, "column": 0 },
          "generated": { "line": 7, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 8, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 9, "column": 0 },
          "generated": { "line": 9, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 10, "column": 0 },
          "generated": { "line": 10, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 11, "column": 0 },
          "generated": { "line": 11, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 12, "column": 0 },
          "generated": { "line": 12, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 13, "column": 0 },
          "generated": { "line": 13, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 14, "column": 0 },
          "generated": { "line": 14, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 15, "column": 0 },
          "generated": { "line": 15, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 16, "column": 0 },
          "generated": { "line": 16, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 17, "column": 0 },
          "generated": { "line": 17, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 18, "column": 0 },
          "generated": { "line": 18, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 19, "column": 0 },
          "generated": { "line": 19, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 20, "column": 0 },
          "generated": { "line": 20, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 21, "column": 0 },
          "generated": { "line": 21, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 22, "column": 0 },
          "generated": { "line": 22, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 23, "column": 0 },
          "generated": { "line": 23, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 24, "column": 0 },
          "generated": { "line": 24, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 25, "column": 0 },
          "generated": { "line": 25, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 26, "column": 0 },
          "generated": { "line": 26, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 27, "column": 0 },
          "generated": { "line": 27, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 28, "column": 0 },
          "generated": { "line": 28, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 29, "column": 0 },
          "generated": { "line": 29, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 30, "column": 0 },
          "generated": { "line": 30, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 31, "column": 0 },
          "generated": { "line": 31, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 32, "column": 0 },
          "generated": { "line": 32, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 33, "column": 0 },
          "generated": { "line": 33, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 34, "column": 0 },
          "generated": { "line": 34, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 35, "column": 0 },
          "generated": { "line": 35, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 36, "column": 0 },
          "generated": { "line": 36, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 37, "column": 0 },
          "generated": { "line": 37, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 38, "column": 0 },
          "generated": { "line": 38, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 39, "column": 0 },
          "generated": { "line": 39, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 40, "column": 0 },
          "generated": { "line": 40, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 41, "column": 0 },
          "generated": { "line": 41, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 42, "column": 0 },
          "generated": { "line": 42, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 43, "column": 0 },
          "generated": { "line": 43, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 44, "column": 0 },
          "generated": { "line": 44, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 45, "column": 0 },
          "generated": { "line": 45, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 46, "column": 0 },
          "generated": { "line": 46, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 47, "column": 0 },
          "generated": { "line": 47, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 48, "column": 0 },
          "generated": { "line": 48, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 49, "column": 0 },
          "generated": { "line": 49, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 50, "column": 0 },
          "generated": { "line": 50, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 51, "column": 0 },
          "generated": { "line": 51, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 52, "column": 0 },
          "generated": { "line": 52, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 53, "column": 0 },
          "generated": { "line": 53, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 54, "column": 0 },
          "generated": { "line": 54, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 55, "column": 0 },
          "generated": { "line": 55, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 56, "column": 0 },
          "generated": { "line": 56, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 57, "column": 0 },
          "generated": { "line": 57, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 58, "column": 0 },
          "generated": { "line": 58, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 59, "column": 0 },
          "generated": { "line": 59, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 60, "column": 0 },
          "generated": { "line": 60, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 61, "column": 0 },
          "generated": { "line": 61, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 62, "column": 0 },
          "generated": { "line": 62, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 63, "column": 0 },
          "generated": { "line": 63, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 64, "column": 0 },
          "generated": { "line": 64, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 65, "column": 0 },
          "generated": { "line": 65, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 66, "column": 0 },
          "generated": { "line": 66, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 67, "column": 0 },
          "generated": { "line": 67, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 68, "column": 0 },
          "generated": { "line": 68, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 69, "column": 0 },
          "generated": { "line": 69, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 70, "column": 0 },
          "generated": { "line": 70, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 71, "column": 0 },
          "generated": { "line": 71, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 72, "column": 0 },
          "generated": { "line": 72, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/querystringify/index.js",
          "original": { "line": 73, "column": 0 },
          "generated": { "line": 73, "column": 0 }
        }
      ],
      "sources": {
        "../../node_modules/@cerebral/router/node_modules/querystringify/index.js":
          "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decode(part[1])] = decode(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"
      },
      "lineCount": 73
    }
  },
  "hash": "a9d73b9d96e866e997cca3e0a51edb16",
  "cacheData": { "env": {} }
}
