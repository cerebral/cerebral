{
  "dependencies": [
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc-ts/package.json",
      "includedInParent": true,
      "mtime": 1523112004000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc-ts/.babelrc",
      "includedInParent": true,
      "mtime": 1522993159000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/node_modules/@cerebral/router/node_modules/url-parse/package.json",
      "includedInParent": true,
      "mtime": 1510917226000
    },
    { "name": "requires-port", "loc": { "line": 3, "column": 23 } },
    { "name": "querystringify", "loc": { "line": 4, "column": 17 } }
  ],
  "generated": {
    "js":
      "var global = (1,eval)(\"this\");\n'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nfunction lolcation(loc) {\n  loc = loc || global.location || {};\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nURL.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n",
    "map": {
      "mappings": [
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 2, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 3, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 3, "column": 0 },
          "generated": { "line": 4, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 5, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 5, "column": 0 },
          "generated": { "line": 6, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 7, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 7, "column": 0 },
          "generated": { "line": 8, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 9, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 9, "column": 0 },
          "generated": { "line": 10, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 10, "column": 0 },
          "generated": { "line": 11, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 11, "column": 0 },
          "generated": { "line": 12, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 12, "column": 0 },
          "generated": { "line": 13, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 13, "column": 0 },
          "generated": { "line": 14, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 14, "column": 0 },
          "generated": { "line": 15, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 15, "column": 0 },
          "generated": { "line": 16, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 16, "column": 0 },
          "generated": { "line": 17, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 17, "column": 0 },
          "generated": { "line": 18, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 18, "column": 0 },
          "generated": { "line": 19, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 19, "column": 0 },
          "generated": { "line": 20, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 20, "column": 0 },
          "generated": { "line": 21, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 21, "column": 0 },
          "generated": { "line": 22, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 22, "column": 0 },
          "generated": { "line": 23, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 23, "column": 0 },
          "generated": { "line": 24, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 24, "column": 0 },
          "generated": { "line": 25, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 25, "column": 0 },
          "generated": { "line": 26, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 26, "column": 0 },
          "generated": { "line": 27, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 27, "column": 0 },
          "generated": { "line": 28, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 28, "column": 0 },
          "generated": { "line": 29, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 29, "column": 0 },
          "generated": { "line": 30, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 30, "column": 0 },
          "generated": { "line": 31, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 31, "column": 0 },
          "generated": { "line": 32, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 32, "column": 0 },
          "generated": { "line": 33, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 33, "column": 0 },
          "generated": { "line": 34, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 34, "column": 0 },
          "generated": { "line": 35, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 35, "column": 0 },
          "generated": { "line": 36, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 36, "column": 0 },
          "generated": { "line": 37, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 37, "column": 0 },
          "generated": { "line": 38, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 38, "column": 0 },
          "generated": { "line": 39, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 39, "column": 0 },
          "generated": { "line": 40, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 40, "column": 0 },
          "generated": { "line": 41, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 41, "column": 0 },
          "generated": { "line": 42, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 42, "column": 0 },
          "generated": { "line": 43, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 43, "column": 0 },
          "generated": { "line": 44, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 44, "column": 0 },
          "generated": { "line": 45, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 45, "column": 0 },
          "generated": { "line": 46, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 46, "column": 0 },
          "generated": { "line": 47, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 47, "column": 0 },
          "generated": { "line": 48, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 48, "column": 0 },
          "generated": { "line": 49, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 49, "column": 0 },
          "generated": { "line": 50, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 50, "column": 0 },
          "generated": { "line": 51, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 51, "column": 0 },
          "generated": { "line": 52, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 52, "column": 0 },
          "generated": { "line": 53, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 53, "column": 0 },
          "generated": { "line": 54, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 54, "column": 0 },
          "generated": { "line": 55, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 55, "column": 0 },
          "generated": { "line": 56, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 56, "column": 0 },
          "generated": { "line": 57, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 57, "column": 0 },
          "generated": { "line": 58, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 58, "column": 0 },
          "generated": { "line": 59, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 59, "column": 0 },
          "generated": { "line": 60, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 60, "column": 0 },
          "generated": { "line": 61, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 61, "column": 0 },
          "generated": { "line": 62, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 62, "column": 0 },
          "generated": { "line": 63, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 63, "column": 0 },
          "generated": { "line": 64, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 64, "column": 0 },
          "generated": { "line": 65, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 65, "column": 0 },
          "generated": { "line": 66, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 66, "column": 0 },
          "generated": { "line": 67, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 67, "column": 0 },
          "generated": { "line": 68, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 68, "column": 0 },
          "generated": { "line": 69, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 69, "column": 0 },
          "generated": { "line": 70, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 70, "column": 0 },
          "generated": { "line": 71, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 71, "column": 0 },
          "generated": { "line": 72, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 72, "column": 0 },
          "generated": { "line": 73, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 73, "column": 0 },
          "generated": { "line": 74, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 74, "column": 0 },
          "generated": { "line": 75, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 75, "column": 0 },
          "generated": { "line": 76, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 76, "column": 0 },
          "generated": { "line": 77, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 77, "column": 0 },
          "generated": { "line": 78, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 78, "column": 0 },
          "generated": { "line": 79, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 79, "column": 0 },
          "generated": { "line": 80, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 80, "column": 0 },
          "generated": { "line": 81, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 81, "column": 0 },
          "generated": { "line": 82, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 82, "column": 0 },
          "generated": { "line": 83, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 83, "column": 0 },
          "generated": { "line": 84, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 84, "column": 0 },
          "generated": { "line": 85, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 85, "column": 0 },
          "generated": { "line": 86, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 86, "column": 0 },
          "generated": { "line": 87, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 87, "column": 0 },
          "generated": { "line": 88, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 88, "column": 0 },
          "generated": { "line": 89, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 89, "column": 0 },
          "generated": { "line": 90, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 90, "column": 0 },
          "generated": { "line": 91, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 91, "column": 0 },
          "generated": { "line": 92, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 92, "column": 0 },
          "generated": { "line": 93, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 93, "column": 0 },
          "generated": { "line": 94, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 94, "column": 0 },
          "generated": { "line": 95, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 95, "column": 0 },
          "generated": { "line": 96, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 96, "column": 0 },
          "generated": { "line": 97, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 97, "column": 0 },
          "generated": { "line": 98, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 98, "column": 0 },
          "generated": { "line": 99, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 99, "column": 0 },
          "generated": { "line": 100, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 100, "column": 0 },
          "generated": { "line": 101, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 101, "column": 0 },
          "generated": { "line": 102, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 102, "column": 0 },
          "generated": { "line": 103, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 103, "column": 0 },
          "generated": { "line": 104, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 104, "column": 0 },
          "generated": { "line": 105, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 105, "column": 0 },
          "generated": { "line": 106, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 106, "column": 0 },
          "generated": { "line": 107, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 107, "column": 0 },
          "generated": { "line": 108, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 108, "column": 0 },
          "generated": { "line": 109, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 109, "column": 0 },
          "generated": { "line": 110, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 110, "column": 0 },
          "generated": { "line": 111, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 111, "column": 0 },
          "generated": { "line": 112, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 112, "column": 0 },
          "generated": { "line": 113, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 113, "column": 0 },
          "generated": { "line": 114, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 114, "column": 0 },
          "generated": { "line": 115, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 115, "column": 0 },
          "generated": { "line": 116, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 116, "column": 0 },
          "generated": { "line": 117, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 117, "column": 0 },
          "generated": { "line": 118, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 118, "column": 0 },
          "generated": { "line": 119, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 119, "column": 0 },
          "generated": { "line": 120, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 120, "column": 0 },
          "generated": { "line": 121, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 121, "column": 0 },
          "generated": { "line": 122, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 122, "column": 0 },
          "generated": { "line": 123, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 123, "column": 0 },
          "generated": { "line": 124, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 124, "column": 0 },
          "generated": { "line": 125, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 125, "column": 0 },
          "generated": { "line": 126, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 126, "column": 0 },
          "generated": { "line": 127, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 127, "column": 0 },
          "generated": { "line": 128, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 128, "column": 0 },
          "generated": { "line": 129, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 129, "column": 0 },
          "generated": { "line": 130, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 130, "column": 0 },
          "generated": { "line": 131, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 131, "column": 0 },
          "generated": { "line": 132, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 132, "column": 0 },
          "generated": { "line": 133, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 133, "column": 0 },
          "generated": { "line": 134, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 134, "column": 0 },
          "generated": { "line": 135, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 135, "column": 0 },
          "generated": { "line": 136, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 136, "column": 0 },
          "generated": { "line": 137, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 137, "column": 0 },
          "generated": { "line": 138, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 138, "column": 0 },
          "generated": { "line": 139, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 139, "column": 0 },
          "generated": { "line": 140, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 140, "column": 0 },
          "generated": { "line": 141, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 141, "column": 0 },
          "generated": { "line": 142, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 142, "column": 0 },
          "generated": { "line": 143, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 143, "column": 0 },
          "generated": { "line": 144, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 144, "column": 0 },
          "generated": { "line": 145, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 145, "column": 0 },
          "generated": { "line": 146, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 146, "column": 0 },
          "generated": { "line": 147, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 147, "column": 0 },
          "generated": { "line": 148, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 148, "column": 0 },
          "generated": { "line": 149, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 149, "column": 0 },
          "generated": { "line": 150, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 150, "column": 0 },
          "generated": { "line": 151, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 151, "column": 0 },
          "generated": { "line": 152, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 152, "column": 0 },
          "generated": { "line": 153, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 153, "column": 0 },
          "generated": { "line": 154, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 154, "column": 0 },
          "generated": { "line": 155, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 155, "column": 0 },
          "generated": { "line": 156, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 156, "column": 0 },
          "generated": { "line": 157, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 157, "column": 0 },
          "generated": { "line": 158, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 158, "column": 0 },
          "generated": { "line": 159, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 159, "column": 0 },
          "generated": { "line": 160, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 160, "column": 0 },
          "generated": { "line": 161, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 161, "column": 0 },
          "generated": { "line": 162, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 162, "column": 0 },
          "generated": { "line": 163, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 163, "column": 0 },
          "generated": { "line": 164, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 164, "column": 0 },
          "generated": { "line": 165, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 165, "column": 0 },
          "generated": { "line": 166, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 166, "column": 0 },
          "generated": { "line": 167, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 167, "column": 0 },
          "generated": { "line": 168, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 168, "column": 0 },
          "generated": { "line": 169, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 169, "column": 0 },
          "generated": { "line": 170, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 170, "column": 0 },
          "generated": { "line": 171, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 171, "column": 0 },
          "generated": { "line": 172, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 172, "column": 0 },
          "generated": { "line": 173, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 173, "column": 0 },
          "generated": { "line": 174, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 174, "column": 0 },
          "generated": { "line": 175, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 175, "column": 0 },
          "generated": { "line": 176, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 176, "column": 0 },
          "generated": { "line": 177, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 177, "column": 0 },
          "generated": { "line": 178, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 178, "column": 0 },
          "generated": { "line": 179, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 179, "column": 0 },
          "generated": { "line": 180, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 180, "column": 0 },
          "generated": { "line": 181, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 181, "column": 0 },
          "generated": { "line": 182, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 182, "column": 0 },
          "generated": { "line": 183, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 183, "column": 0 },
          "generated": { "line": 184, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 184, "column": 0 },
          "generated": { "line": 185, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 185, "column": 0 },
          "generated": { "line": 186, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 186, "column": 0 },
          "generated": { "line": 187, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 187, "column": 0 },
          "generated": { "line": 188, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 188, "column": 0 },
          "generated": { "line": 189, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 189, "column": 0 },
          "generated": { "line": 190, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 190, "column": 0 },
          "generated": { "line": 191, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 191, "column": 0 },
          "generated": { "line": 192, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 192, "column": 0 },
          "generated": { "line": 193, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 193, "column": 0 },
          "generated": { "line": 194, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 194, "column": 0 },
          "generated": { "line": 195, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 195, "column": 0 },
          "generated": { "line": 196, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 196, "column": 0 },
          "generated": { "line": 197, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 197, "column": 0 },
          "generated": { "line": 198, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 198, "column": 0 },
          "generated": { "line": 199, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 199, "column": 0 },
          "generated": { "line": 200, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 200, "column": 0 },
          "generated": { "line": 201, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 201, "column": 0 },
          "generated": { "line": 202, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 202, "column": 0 },
          "generated": { "line": 203, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 203, "column": 0 },
          "generated": { "line": 204, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 204, "column": 0 },
          "generated": { "line": 205, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 205, "column": 0 },
          "generated": { "line": 206, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 206, "column": 0 },
          "generated": { "line": 207, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 207, "column": 0 },
          "generated": { "line": 208, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 208, "column": 0 },
          "generated": { "line": 209, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 209, "column": 0 },
          "generated": { "line": 210, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 210, "column": 0 },
          "generated": { "line": 211, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 211, "column": 0 },
          "generated": { "line": 212, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 212, "column": 0 },
          "generated": { "line": 213, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 213, "column": 0 },
          "generated": { "line": 214, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 214, "column": 0 },
          "generated": { "line": 215, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 215, "column": 0 },
          "generated": { "line": 216, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 216, "column": 0 },
          "generated": { "line": 217, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 217, "column": 0 },
          "generated": { "line": 218, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 218, "column": 0 },
          "generated": { "line": 219, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 219, "column": 0 },
          "generated": { "line": 220, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 220, "column": 0 },
          "generated": { "line": 221, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 221, "column": 0 },
          "generated": { "line": 222, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 222, "column": 0 },
          "generated": { "line": 223, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 223, "column": 0 },
          "generated": { "line": 224, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 224, "column": 0 },
          "generated": { "line": 225, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 225, "column": 0 },
          "generated": { "line": 226, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 226, "column": 0 },
          "generated": { "line": 227, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 227, "column": 0 },
          "generated": { "line": 228, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 228, "column": 0 },
          "generated": { "line": 229, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 229, "column": 0 },
          "generated": { "line": 230, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 230, "column": 0 },
          "generated": { "line": 231, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 231, "column": 0 },
          "generated": { "line": 232, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 232, "column": 0 },
          "generated": { "line": 233, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 233, "column": 0 },
          "generated": { "line": 234, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 234, "column": 0 },
          "generated": { "line": 235, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 235, "column": 0 },
          "generated": { "line": 236, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 236, "column": 0 },
          "generated": { "line": 237, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 237, "column": 0 },
          "generated": { "line": 238, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 238, "column": 0 },
          "generated": { "line": 239, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 239, "column": 0 },
          "generated": { "line": 240, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 240, "column": 0 },
          "generated": { "line": 241, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 241, "column": 0 },
          "generated": { "line": 242, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 242, "column": 0 },
          "generated": { "line": 243, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 243, "column": 0 },
          "generated": { "line": 244, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 244, "column": 0 },
          "generated": { "line": 245, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 245, "column": 0 },
          "generated": { "line": 246, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 246, "column": 0 },
          "generated": { "line": 247, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 247, "column": 0 },
          "generated": { "line": 248, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 248, "column": 0 },
          "generated": { "line": 249, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 249, "column": 0 },
          "generated": { "line": 250, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 250, "column": 0 },
          "generated": { "line": 251, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 251, "column": 0 },
          "generated": { "line": 252, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 252, "column": 0 },
          "generated": { "line": 253, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 253, "column": 0 },
          "generated": { "line": 254, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 254, "column": 0 },
          "generated": { "line": 255, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 255, "column": 0 },
          "generated": { "line": 256, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 256, "column": 0 },
          "generated": { "line": 257, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 257, "column": 0 },
          "generated": { "line": 258, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 258, "column": 0 },
          "generated": { "line": 259, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 259, "column": 0 },
          "generated": { "line": 260, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 260, "column": 0 },
          "generated": { "line": 261, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 261, "column": 0 },
          "generated": { "line": 262, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 262, "column": 0 },
          "generated": { "line": 263, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 263, "column": 0 },
          "generated": { "line": 264, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 264, "column": 0 },
          "generated": { "line": 265, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 265, "column": 0 },
          "generated": { "line": 266, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 266, "column": 0 },
          "generated": { "line": 267, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 267, "column": 0 },
          "generated": { "line": 268, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 268, "column": 0 },
          "generated": { "line": 269, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 269, "column": 0 },
          "generated": { "line": 270, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 270, "column": 0 },
          "generated": { "line": 271, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 271, "column": 0 },
          "generated": { "line": 272, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 272, "column": 0 },
          "generated": { "line": 273, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 273, "column": 0 },
          "generated": { "line": 274, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 274, "column": 0 },
          "generated": { "line": 275, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 275, "column": 0 },
          "generated": { "line": 276, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 276, "column": 0 },
          "generated": { "line": 277, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 277, "column": 0 },
          "generated": { "line": 278, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 278, "column": 0 },
          "generated": { "line": 279, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 279, "column": 0 },
          "generated": { "line": 280, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 280, "column": 0 },
          "generated": { "line": 281, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 281, "column": 0 },
          "generated": { "line": 282, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 282, "column": 0 },
          "generated": { "line": 283, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 283, "column": 0 },
          "generated": { "line": 284, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 284, "column": 0 },
          "generated": { "line": 285, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 285, "column": 0 },
          "generated": { "line": 286, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 286, "column": 0 },
          "generated": { "line": 287, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 287, "column": 0 },
          "generated": { "line": 288, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 288, "column": 0 },
          "generated": { "line": 289, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 289, "column": 0 },
          "generated": { "line": 290, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 290, "column": 0 },
          "generated": { "line": 291, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 291, "column": 0 },
          "generated": { "line": 292, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 292, "column": 0 },
          "generated": { "line": 293, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 293, "column": 0 },
          "generated": { "line": 294, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 294, "column": 0 },
          "generated": { "line": 295, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 295, "column": 0 },
          "generated": { "line": 296, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 296, "column": 0 },
          "generated": { "line": 297, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 297, "column": 0 },
          "generated": { "line": 298, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 298, "column": 0 },
          "generated": { "line": 299, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 299, "column": 0 },
          "generated": { "line": 300, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 300, "column": 0 },
          "generated": { "line": 301, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 301, "column": 0 },
          "generated": { "line": 302, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 302, "column": 0 },
          "generated": { "line": 303, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 303, "column": 0 },
          "generated": { "line": 304, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 304, "column": 0 },
          "generated": { "line": 305, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 305, "column": 0 },
          "generated": { "line": 306, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 306, "column": 0 },
          "generated": { "line": 307, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 307, "column": 0 },
          "generated": { "line": 308, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 308, "column": 0 },
          "generated": { "line": 309, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 309, "column": 0 },
          "generated": { "line": 310, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 310, "column": 0 },
          "generated": { "line": 311, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 311, "column": 0 },
          "generated": { "line": 312, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 312, "column": 0 },
          "generated": { "line": 313, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 313, "column": 0 },
          "generated": { "line": 314, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 314, "column": 0 },
          "generated": { "line": 315, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 315, "column": 0 },
          "generated": { "line": 316, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 316, "column": 0 },
          "generated": { "line": 317, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 317, "column": 0 },
          "generated": { "line": 318, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 318, "column": 0 },
          "generated": { "line": 319, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 319, "column": 0 },
          "generated": { "line": 320, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 320, "column": 0 },
          "generated": { "line": 321, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 321, "column": 0 },
          "generated": { "line": 322, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 322, "column": 0 },
          "generated": { "line": 323, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 323, "column": 0 },
          "generated": { "line": 324, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 324, "column": 0 },
          "generated": { "line": 325, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 325, "column": 0 },
          "generated": { "line": 326, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 326, "column": 0 },
          "generated": { "line": 327, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 327, "column": 0 },
          "generated": { "line": 328, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 328, "column": 0 },
          "generated": { "line": 329, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 329, "column": 0 },
          "generated": { "line": 330, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 330, "column": 0 },
          "generated": { "line": 331, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 331, "column": 0 },
          "generated": { "line": 332, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 332, "column": 0 },
          "generated": { "line": 333, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 333, "column": 0 },
          "generated": { "line": 334, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 334, "column": 0 },
          "generated": { "line": 335, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 335, "column": 0 },
          "generated": { "line": 336, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 336, "column": 0 },
          "generated": { "line": 337, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 337, "column": 0 },
          "generated": { "line": 338, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 338, "column": 0 },
          "generated": { "line": 339, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 339, "column": 0 },
          "generated": { "line": 340, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 340, "column": 0 },
          "generated": { "line": 341, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 341, "column": 0 },
          "generated": { "line": 342, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 342, "column": 0 },
          "generated": { "line": 343, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 343, "column": 0 },
          "generated": { "line": 344, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 344, "column": 0 },
          "generated": { "line": 345, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 345, "column": 0 },
          "generated": { "line": 346, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 346, "column": 0 },
          "generated": { "line": 347, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 347, "column": 0 },
          "generated": { "line": 348, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 348, "column": 0 },
          "generated": { "line": 349, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 349, "column": 0 },
          "generated": { "line": 350, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 350, "column": 0 },
          "generated": { "line": 351, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 351, "column": 0 },
          "generated": { "line": 352, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 352, "column": 0 },
          "generated": { "line": 353, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 353, "column": 0 },
          "generated": { "line": 354, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 354, "column": 0 },
          "generated": { "line": 355, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 355, "column": 0 },
          "generated": { "line": 356, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 356, "column": 0 },
          "generated": { "line": 357, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 357, "column": 0 },
          "generated": { "line": 358, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 358, "column": 0 },
          "generated": { "line": 359, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 359, "column": 0 },
          "generated": { "line": 360, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 360, "column": 0 },
          "generated": { "line": 361, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 361, "column": 0 },
          "generated": { "line": 362, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 362, "column": 0 },
          "generated": { "line": 363, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 363, "column": 0 },
          "generated": { "line": 364, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 364, "column": 0 },
          "generated": { "line": 365, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 365, "column": 0 },
          "generated": { "line": 366, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 366, "column": 0 },
          "generated": { "line": 367, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 367, "column": 0 },
          "generated": { "line": 368, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 368, "column": 0 },
          "generated": { "line": 369, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 369, "column": 0 },
          "generated": { "line": 370, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 370, "column": 0 },
          "generated": { "line": 371, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 371, "column": 0 },
          "generated": { "line": 372, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 372, "column": 0 },
          "generated": { "line": 373, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 373, "column": 0 },
          "generated": { "line": 374, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 374, "column": 0 },
          "generated": { "line": 375, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 375, "column": 0 },
          "generated": { "line": 376, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 376, "column": 0 },
          "generated": { "line": 377, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 377, "column": 0 },
          "generated": { "line": 378, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 378, "column": 0 },
          "generated": { "line": 379, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 379, "column": 0 },
          "generated": { "line": 380, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 380, "column": 0 },
          "generated": { "line": 381, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 381, "column": 0 },
          "generated": { "line": 382, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 382, "column": 0 },
          "generated": { "line": 383, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 383, "column": 0 },
          "generated": { "line": 384, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 384, "column": 0 },
          "generated": { "line": 385, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 385, "column": 0 },
          "generated": { "line": 386, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 386, "column": 0 },
          "generated": { "line": 387, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 387, "column": 0 },
          "generated": { "line": 388, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 388, "column": 0 },
          "generated": { "line": 389, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 389, "column": 0 },
          "generated": { "line": 390, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 390, "column": 0 },
          "generated": { "line": 391, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 391, "column": 0 },
          "generated": { "line": 392, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 392, "column": 0 },
          "generated": { "line": 393, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 393, "column": 0 },
          "generated": { "line": 394, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 394, "column": 0 },
          "generated": { "line": 395, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 395, "column": 0 },
          "generated": { "line": 396, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 396, "column": 0 },
          "generated": { "line": 397, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 397, "column": 0 },
          "generated": { "line": 398, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 398, "column": 0 },
          "generated": { "line": 399, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 399, "column": 0 },
          "generated": { "line": 400, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 400, "column": 0 },
          "generated": { "line": 401, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 401, "column": 0 },
          "generated": { "line": 402, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 402, "column": 0 },
          "generated": { "line": 403, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 403, "column": 0 },
          "generated": { "line": 404, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 404, "column": 0 },
          "generated": { "line": 405, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 405, "column": 0 },
          "generated": { "line": 406, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 406, "column": 0 },
          "generated": { "line": 407, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 407, "column": 0 },
          "generated": { "line": 408, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 408, "column": 0 },
          "generated": { "line": 409, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 409, "column": 0 },
          "generated": { "line": 410, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 410, "column": 0 },
          "generated": { "line": 411, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 411, "column": 0 },
          "generated": { "line": 412, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 412, "column": 0 },
          "generated": { "line": 413, "column": 0 }
        },
        {
          "source":
            "../../node_modules/@cerebral/router/node_modules/url-parse/index.js",
          "original": { "line": 413, "column": 0 },
          "generated": { "line": 414, "column": 0 }
        }
      ],
      "sources": {
        "../../node_modules/@cerebral/router/node_modules/url-parse/index.js":
          "'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nfunction lolcation(loc) {\n  loc = loc || global.location || {};\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nURL.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n"
      },
      "lineCount": 414
    }
  },
  "hash": "fbb97ca97eb7aaec7725d4458f0b9343",
  "cacheData": { "env": {} }
}
