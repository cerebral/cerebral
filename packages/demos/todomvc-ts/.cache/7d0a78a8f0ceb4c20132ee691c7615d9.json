{
  "dependencies": [
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc-ts/package.json",
      "includedInParent": true,
      "mtime": 1522953864000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/packages/demos/todomvc-ts/.babelrc",
      "includedInParent": true,
      "mtime": 1522949698000
    },
    {
      "name":
        "/Users/christianalfoni/Development/cerebral/node_modules/uuid/package.json",
      "includedInParent": true,
      "mtime": 1522096885000
    },
    { "name": "./lib/rng", "loc": { "line": 1, "column": 18 } },
    { "name": "./lib/bytesToUuid", "loc": { "line": 2, "column": 26 } }
  ],
  "generated": {
    "js":
      "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n",
    "map": {
      "mappings": [
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 1, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 2, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 3, "column": 0 },
          "generated": { "line": 3, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 4, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 5, "column": 0 },
          "generated": { "line": 5, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 6, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 7, "column": 0 },
          "generated": { "line": 7, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 8, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 9, "column": 0 },
          "generated": { "line": 9, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 10, "column": 0 },
          "generated": { "line": 10, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 11, "column": 0 },
          "generated": { "line": 11, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 12, "column": 0 },
          "generated": { "line": 12, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 13, "column": 0 },
          "generated": { "line": 13, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 14, "column": 0 },
          "generated": { "line": 14, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 15, "column": 0 },
          "generated": { "line": 15, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 16, "column": 0 },
          "generated": { "line": 16, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 17, "column": 0 },
          "generated": { "line": 17, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 18, "column": 0 },
          "generated": { "line": 18, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 19, "column": 0 },
          "generated": { "line": 19, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 20, "column": 0 },
          "generated": { "line": 20, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 21, "column": 0 },
          "generated": { "line": 21, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 22, "column": 0 },
          "generated": { "line": 22, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 23, "column": 0 },
          "generated": { "line": 23, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 24, "column": 0 },
          "generated": { "line": 24, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 25, "column": 0 },
          "generated": { "line": 25, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 26, "column": 0 },
          "generated": { "line": 26, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 27, "column": 0 },
          "generated": { "line": 27, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 28, "column": 0 },
          "generated": { "line": 28, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 29, "column": 0 },
          "generated": { "line": 29, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 30, "column": 0 },
          "generated": { "line": 30, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 31, "column": 0 },
          "generated": { "line": 31, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 32, "column": 0 },
          "generated": { "line": 32, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 33, "column": 0 },
          "generated": { "line": 33, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 34, "column": 0 },
          "generated": { "line": 34, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 35, "column": 0 },
          "generated": { "line": 35, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 36, "column": 0 },
          "generated": { "line": 36, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 37, "column": 0 },
          "generated": { "line": 37, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 38, "column": 0 },
          "generated": { "line": 38, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 39, "column": 0 },
          "generated": { "line": 39, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 40, "column": 0 },
          "generated": { "line": 40, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 41, "column": 0 },
          "generated": { "line": 41, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 42, "column": 0 },
          "generated": { "line": 42, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 43, "column": 0 },
          "generated": { "line": 43, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 44, "column": 0 },
          "generated": { "line": 44, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 45, "column": 0 },
          "generated": { "line": 45, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 46, "column": 0 },
          "generated": { "line": 46, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 47, "column": 0 },
          "generated": { "line": 47, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 48, "column": 0 },
          "generated": { "line": 48, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 49, "column": 0 },
          "generated": { "line": 49, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 50, "column": 0 },
          "generated": { "line": 50, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 51, "column": 0 },
          "generated": { "line": 51, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 52, "column": 0 },
          "generated": { "line": 52, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 53, "column": 0 },
          "generated": { "line": 53, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 54, "column": 0 },
          "generated": { "line": 54, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 55, "column": 0 },
          "generated": { "line": 55, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 56, "column": 0 },
          "generated": { "line": 56, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 57, "column": 0 },
          "generated": { "line": 57, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 58, "column": 0 },
          "generated": { "line": 58, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 59, "column": 0 },
          "generated": { "line": 59, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 60, "column": 0 },
          "generated": { "line": 60, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 61, "column": 0 },
          "generated": { "line": 61, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 62, "column": 0 },
          "generated": { "line": 62, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 63, "column": 0 },
          "generated": { "line": 63, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 64, "column": 0 },
          "generated": { "line": 64, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 65, "column": 0 },
          "generated": { "line": 65, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 66, "column": 0 },
          "generated": { "line": 66, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 67, "column": 0 },
          "generated": { "line": 67, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 68, "column": 0 },
          "generated": { "line": 68, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 69, "column": 0 },
          "generated": { "line": 69, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 70, "column": 0 },
          "generated": { "line": 70, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 71, "column": 0 },
          "generated": { "line": 71, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 72, "column": 0 },
          "generated": { "line": 72, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 73, "column": 0 },
          "generated": { "line": 73, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 74, "column": 0 },
          "generated": { "line": 74, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 75, "column": 0 },
          "generated": { "line": 75, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 76, "column": 0 },
          "generated": { "line": 76, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 77, "column": 0 },
          "generated": { "line": 77, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 78, "column": 0 },
          "generated": { "line": 78, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 79, "column": 0 },
          "generated": { "line": 79, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 80, "column": 0 },
          "generated": { "line": 80, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 81, "column": 0 },
          "generated": { "line": 81, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 82, "column": 0 },
          "generated": { "line": 82, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 83, "column": 0 },
          "generated": { "line": 83, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 84, "column": 0 },
          "generated": { "line": 84, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 85, "column": 0 },
          "generated": { "line": 85, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 86, "column": 0 },
          "generated": { "line": 86, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 87, "column": 0 },
          "generated": { "line": 87, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 88, "column": 0 },
          "generated": { "line": 88, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 89, "column": 0 },
          "generated": { "line": 89, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 90, "column": 0 },
          "generated": { "line": 90, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 91, "column": 0 },
          "generated": { "line": 91, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 92, "column": 0 },
          "generated": { "line": 92, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 93, "column": 0 },
          "generated": { "line": 93, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 94, "column": 0 },
          "generated": { "line": 94, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 95, "column": 0 },
          "generated": { "line": 95, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 96, "column": 0 },
          "generated": { "line": 96, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 97, "column": 0 },
          "generated": { "line": 97, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 98, "column": 0 },
          "generated": { "line": 98, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 99, "column": 0 },
          "generated": { "line": 99, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 100, "column": 0 },
          "generated": { "line": 100, "column": 0 }
        },
        {
          "source": "../../../node_modules/uuid/v1.js",
          "original": { "line": 101, "column": 0 },
          "generated": { "line": 101, "column": 0 }
        }
      ],
      "sources": {
        "../../../node_modules/uuid/v1.js":
          "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n"
      },
      "lineCount": 101
    }
  },
  "hash": "00e59a0c4ebbd10783b04cfc9e98c16b",
  "cacheData": { "env": {} }
}
